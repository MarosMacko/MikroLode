Configuration of RAM

2 port RAM --> 1024 x 18bit

279 to 0 --> Hracie pole
    bit config -> 'red_p2', 'grey_p2', 'taken', 'red_p1', 'grey_p1',
    'ship/noship', 'HUD', (10 to 0) => tile_data, 

Tile data =>	(10 downto 7)	==	player 2
				(6 downto 0)	==	player 1
Pre zasiahnuté p1 platí red/grey tint

280 to 319 --> HUD

320 --> (18 to 0) --> 0 - player
			1 - zatrasenie
			2 - fade in
			3 - fade out 

1023 to 321 --> removed for LUT usage


type ram_data is record
		red_p2    : STD_LOGIC;
		grey_p2   : STD_LOGIC;
		taken     : STD_LOGIC;
		red_p1    : STD_LOGIC;
		grey_p1   : STD_LOGIC;
		ship      : STD_LOGIC;
		HUD       : STD_LOGIC;
		tile_data : STD_LOGIC_VECTOR(10 downto 0);
end record ram_data;

function pack(arg : ram_data) return std_logic_vector is
		variable result : std_logic_vector(17 downto 0);
	begin
		result(17)         := arg.red_p2;
		result(16)         := arg.grey_p2;
		result(15)         := arg.taken;
		result(14)         := arg.red_p1;
		result(13)         := arg.grey_p1;
		result(12)         := arg.ship;
		result(11)         := arg.HUD;
		result(10 downto 0) := arg.tile_data;
	return result;
end function pack;

function unpack(arg : std_logic_vector(17 downto 0)) return ram_data is
		variable result : ram_data;
	begin
		result.red_p2    := arg(17);
		result.grey_p2   := arg(16);
		result.taken     := arg(15);
		result.red_p1    := arg(14);
		result.grey_p1   := arg(13);
		result.ship      := arg(12);
		result.HUD       := arg(11);
		result.tile_data := arg(10 downto 0);
	return result;
end function unpack;